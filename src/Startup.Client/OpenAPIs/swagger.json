{
  "openapi": "3.0.1",
  "info": {
    "title": "StartupExample API v1",
    "description": "API Swagger Documentation, &copy; 2022 - 2023 - StartupExample API - Build Version: 1.0.0.0",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/Login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User account login endpoint.",
        "requestBody": {
          "description": "Contains details about the user logging in.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "404": {
            "description": "NotFound - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/Info/StatusXml": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Service Status in XML format",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Info/StatusJson": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Service status in JSON format",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Info/Settings": {
      "get": {
        "tags": [
          "Info"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Info/Environment": {
      "get": {
        "tags": [
          "Info"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Randomize/GenerateSecretGiftExchangeList": {
      "post": {
        "tags": [
          "Randomize"
        ],
        "summary": "Generate a secret gift exchange list, pairing each person with another randomly.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The list of participants to be randomly paired with another. Count >= 3",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GiftExchange"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GiftExchange"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GiftExchange"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GiftExchange"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GiftExchange"
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "404": {
            "description": "NotFound - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v{version}/WeatherForecast/GetWeatherForecast1": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "404": {
            "description": "NotFound - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v{version}/WeatherForecast/GetWeatherForecast2": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "404": {
            "description": "NotFound - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v{version}/WeatherForecast/GetWeatherForecast4": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "404": {
            "description": "NotFound - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v{version}/WeatherForecast/GetWeatherForecast3": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "404": {
            "description": "NotFound - See Error Results for Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ErrorResult": {
        "type": "object",
        "properties": {
          "logId": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GiftExchange": {
        "type": "object",
        "properties": {
          "person": {
            "type": "string",
            "nullable": true
          },
          "hasName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Represents a pairing of two people in a gift exchange."
      },
      "UserLoginModel": {
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Bearer Authentication with JWT Token",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}