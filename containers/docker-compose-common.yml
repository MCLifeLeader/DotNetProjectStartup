services:
  # Development Resources

# Redis Cache
  redis:
    image: redis:latest
    ports:
      - "10120:6379" # Redis Cache, Update port if needed
    #restart: unless-stopped
    container_name: RedisCacheDev

# MailHog for email testing - SMTP mail trap server
  mailhog:
    image: mailhog/mailhog:latest
    logging:
      driver: "none" # Disable logging
    ports:
      - "10130:8025" # web ui, Update port if needed
      - "10140:1025" # smtp server, Update port if needed
    #restart: unless-stopped
    container_name: MailHogDev

# OpenTelemetry Collector
  otel-collector:
    image: datalust/seq:latest
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA}"
      SEQ_FIRSTRUN_NOAUTHENTICATION: "${SEQ_FIRSTRUN_NOAUTHENTICATION}"
      SEQ_STORAGE_SECRETKEY: "${SEQ_STORAGE_SECRETKEY}"
    ports:
      - "10150:80" # OpenTelemetry, Update port if needed
    #restart: unless-stopped
    container_name: OtelCollectorDev

# Wiremock endpoint for mocking APIs
  wiremock:
    image: wiremock/wiremock:latest
    ports:
      - "10160:8080" # Wiremock, Update port if needed
    volumes:
      - ./extensions:/var/wiremock/extensions
      - ./__files:/home/wiremock/__files
      - ./mappings:/home/wiremock/mappings
    entrypoint:
      [
        "/docker-entrypoint.sh",
        "--global-response-templating",
        "--disable-gzip",
        "--verbose"
      ]
    #restart: unless-stopped
    container_name: WiremockDev

# SQL Edge and Service Bus Emulator
  SqlEdge-sbDev:
    image: mcr.microsoft.com/azure-sql-edge:latest
    networks:
      sb-emulator:
        aliases:
          - SqlEdge-sbDev
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA}"
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
    #restart: unless-stopped
    container_name: SqlEdge-sbDev

# Service Bus Emulator using SQL Edge
  service-bus:
    image: mcr.microsoft.com/azure-messaging/servicebus-emulator:latest
    pull_policy: always
    volumes:
      - "./service-bus/Config.json:/ServiceBus_Emulator/ConfigFiles/Config.json"
    ports:
      - "10170:5672" # Service Bus, Update port if needed
      - "10171:5300" # Service Bus, Update port if needed
    environment:
      SQL_SERVER: "SqlEdge-sbDev"
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}" # Password should be same as what is set for SQL Edge
      ACCEPT_EULA: "${ACCEPT_EULA}"
      SQL_WAIT_INTERVAL: "15"                   # Optional: Time in seconds to wait for SQL to be ready (default is 15 seconds)
    depends_on:
      - SqlEdge-sbDev
    networks:
      sb-emulator:
        aliases:
          - sb-emulator
    #restart: unless-stopped
    container_name: ServiceBusDev

# Azurite (Azure Storage Emulator)
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000" # Blob service, Update port if needed
      - "10001:10001" # Queue service, Update port if needed
      - "10002:10002" # Table service, Update port if needed
    #restart: unless-stopped
    container_name: AzuriteDev

networks:
  sb-emulator:
